<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 맵핑될 DAO 인터페이스의 Full name 을 줍니다. -->
<mapper namespace="com.goupang.www.dao.review.ReviewDAO">

	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 boardVO 는 mybatis-config.xml 에 Alias 되어 있습니다. -->
	<!-- Alias는 소문자로 한다 -->
	<select id="selectReviewByOrderProductsNoList" resultType="com.goupang.www.dto.review.Review">
 	SELECT *
FROM  
  (
  SELECT *
  FROM  
  (
	SELECT 
	ROWNUM AS SEQ,
	PRODUCT_NAME,
	PRODUCT_OPTION,
	PRODUCT_NO,
	MEMBER_NAME,
	MEMBER_NO,
	ORDER_PRODUCTS_NO,
	REVIEW_NO,
	REVIEW_RATE,
	REVIEW_CONTENT,
	REVIEW_SUMMARY,
	REVIEW_DATE 
	FROM  
	  ( 
		SELECT 
		P.PRODUCT_NAME,
		P.PRODUCT_OPTION,
		P.PRODUCT_NO,
		M.MEMBER_NAME,
		M.MEMBER_NO,
		O.ORDER_PRODUCTS_NO,
		R.REVIEW_NO,
		R.REVIEW_RATE,
		R.REVIEW_CONTENT,
		R.REVIEW_SUMMARY,
		R.REVIEW_DATE 
		FROM REVIEW R, MEMBER M, PRODUCT P, ORDER_PRODUCTS O 
		WHERE P.PRODUCT_NO = O.PRODUCT_NO 
		AND M.MEMBER_NO = O.MEMBER_NO 
		AND R.ORDER_PRODUCTS_NO = O.ORDER_PRODUCTS_NO 
		AND O.ORDER_PRODUCTS_NO = #{orderProductsNo}  
		ORDER BY R.REVIEW_NO DESC 
 	  ) 
  )
WHERE SEQ >= #{startIndex} 
)
WHERE  <![CDATA[ ROWNUM <= #{pageSize}  ]]> 
	</select>
	
	<select id="selectReviewByProductNoList" resultType="com.goupang.www.dto.review.Review">
 	SELECT *
FROM 
  (
  SELECT *
  FROM  
  (
	SELECT 
	ROWNUM AS SEQ,
	PRODUCT_NAME,
	PRODUCT_OPTION,
	PRODUCT_NO,
	MEMBER_NAME,
	MEMBER_NO,
	ORDER_PRODUCTS_NO,
	REVIEW_NO,
	REVIEW_RATE,
	REVIEW_CONTENT,
	REVIEW_SUMMARY,
	REVIEW_DATE 
	FROM 
	  ( 
		SELECT 
		P.PRODUCT_NAME,
		P.PRODUCT_OPTION,
		P.PRODUCT_NO,
		M.MEMBER_NAME,
		M.MEMBER_NO,
		O.ORDER_PRODUCTS_NO,
		R.REVIEW_NO,
		R.REVIEW_RATE,
		R.REVIEW_CONTENT,
		R.REVIEW_SUMMARY, 
		R.REVIEW_DATE 
		FROM REVIEW R, MEMBER M, PRODUCT P, ORDER_PRODUCTS O 
		WHERE M.MEMBER_NO = O.MEMBER_NO 
		AND P.PRODUCT_NO = O.PRODUCT_NO 
		AND O.PRODUCT_NO = #{productNo} 
		AND O.ORDER_STATUS = #{orderStatus}
		ORDER BY R.REVIEW_NO DESC
 	  )
  )
WHERE SEQ >= #{startIndex}
)
WHERE  <![CDATA[ ROWNUM <= #{pageSize}  ]]> 
	</select>
	
	<select id="selectReviewByMemberNoList" resultType="com.goupang.www.dto.review.Review">
	SELECT 
	P.PRODUCT_NAME,
	P.PRODUCT_OPTION,
	P.PRODUCT_NO,
	M.MEMBER_NAME,
	M.MEMBER_NO,
	O.ORDER_PRODUCTS_NO,
	R.REVIEW_NO,
	R.REVIEW_RATE,
	R.REVIEW_CONTENT,
	R.REVIEW_SUMMARY,
	R.REVIEW_DATE 
	FROM REVIEW R, MEMBER M, PRODUCT P, ORDER_PRODUCTS O 
	WHERE P.PRODUCT_NO = O.PRODUCT_NO 
	AND M.MEMBER_NO = O.MEMBER_NO 
	AND O.MEMBER_NO = #{memberNo} 
	AND O.ORDER_STATUS = #{orderStatus}
	ORDER BY R.REVIEW_NO DESC
	</select>
	
	<select id="selectReviewRateByProductNo" resultType="com.goupang.www.dto.product.Product">
	SELECT 
	product_no,
	product_avg_RATE 
	FROM product 
	WHERE PRODUCT_NO = #{productNo}
	</select>
	
	<select id="selectOrderProductByOrderStatus" resultType="com.goupang.www.dto.order.OrderProduct">
	SELECT 
	ORDER_PRODUCTS_NO,
	PRODUCT_NO,
	MEMBER_NO 
	FROM ORDER_PRODUCTS 
	WHERE ORDER_STATUS = #{orderStatus}
	</select>
	
	<select id="selectReviewCountByProductNo" resultType="int">
	SELECT 
	COUNT(*) 
	FROM REVIEW 
	WHERE PRODUCT_NO = #{productNo}
	</select>
	
	<select id="selectReviewCountByOrderProductsNo" resultType="int">
	SELECT 
	COUNT(*) 
	FROM REVIEW 
	WHERE ORDER_STATUS = {orderStatus}  
	AND ORDER_PRODUCTS_NO = #{orderProductsNo}
	</select>

	<insert id="insertReview">
	INSERT INTO REVIEW(
	REVIEW_NO, 
	ORDER_PRODUCTS_NO,
	PRODUCT_NO, 
	REVIEW_RATE,
	REVIEW_CONTENT,
	REVIEW_SUMMARY,
	REVIEW_DATE
	)VALUES(
	REVIEW_SEQ.nextval,
	#{orderProductsNo},
	#{productNo},
	#{reviewRate},
	#{reviewContent},
	#{reviewSummary},
	SYSDATE
	)
	</insert>

	<insert id="insertReviewRate">
	INSERT INTO REVIEW(
	REVIEW_NO,
	ORDER_PRODUCTS_NO,
	PRODUCT_NO,
	REVIEW_RATE,
	REVIEW_DATE
	)VALUES(
	REVIEW_SEQ.nextval,
	#{orderProductsNo},
	#{productNo},
	#{reviewRate},
	SYSDATE
	)
	</insert>
	
	<insert id="insertReviewRateContent">
	INSERT INTO REVIEW(
	REVIEW_NO,
	ORDER_PRODUCTS_NO,
	PRODUCT_NO,
	REVIEW_RATE,
	REVIEW_CONTENT,
	REVIEW_DATE
	)VALUES(
	REVIEW_SEQ.nextval,
	#{orderProductsNo},
	#{productNo},
	#{reviewRate},
	#{reviewContent},
	SYSDATE
	)
	</insert>
	
	<insert id="insertReviewRateSummary">
	INSERT INTO REVIEW(
	REVIEW_NO,
	ORDER_PRODUCTS_NO,
	PRODUCT_NO,
	REVIEW_RATE,
	REVIEW_SUMMARY,
	REVIEW_DATE
	)VALUES(
	REVIEW_SEQ.nextval,
	#{orderProductsNo},
	#{productNo},
	#{reviewRate},
	#{reviewSummary},
	SYSDATE
	)
	</insert>
	
	<update id="updateReview">
	UPDATE REVIEW 
	SET 
	REVIEW_RATE = #{reviewRate},
	REVIEW_CONTENT = #{reviewContent},
	REVIEW_SUMMARY = #{reviewSummary},
	REVIEW_DATE = SYSDATE 
	WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	<update id="updateProductAvgRate">
	UPDATE PRODUCT 
	SET 
	PRODUCT_AVG_RATE = #{productAvgRate} 
	WHERE PRODUCT_NO = #{productNo}
	</update>
	
	<delete id="deleteReview">
	DELETE FROM REVIEW WHERE REVIEW_NO = #{reviewNo}
	</delete>
	
</mapper>	